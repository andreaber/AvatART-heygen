"""Esquema base

Revision ID: f4fa842447c8
Revises: 
Create Date: 2025-10-14 09:13:02.500394

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f4fa842447c8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('avatar_url', sa.String(length=200), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'PRODUCER', 'SUBPRODUCER', 'FINAL_USER', name='userrole'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACTIVE', 'SUSPENDED', 'REJECTED', name='userstatus'), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('professional_info', sa.Text(), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('email_verification_token', sa.String(length=100), nullable=True),
    sa.Column('email_verification_sent_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('invited_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['invited_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_verification_token')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('producer_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('motivation', sa.Text(), nullable=True),
    sa.Column('company_name', sa.String(length=100), nullable=True),
    sa.Column('business_type', sa.String(length=50), nullable=True),
    sa.Column('website', sa.String(length=200), nullable=True),
    sa.Column('expected_volume', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', name='producerrequeststatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_by_id', sa.Integer(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['reviewed_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('producer_requests', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_producer_requests_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_producer_requests_user_id'), ['user_id'], unique=False)

    op.create_table('producers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('company_name', sa.String(length=100), nullable=False),
    sa.Column('business_type', sa.String(length=50), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('website', sa.String(length=100), nullable=True),
    sa.Column('heygen_api_key_encrypted', sa.Text(), nullable=True),
    sa.Column('stripe_account_id', sa.String(length=100), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'SUSPENDED', 'PENDING', 'INACTIVE', name='producerstatus'), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    with op.batch_alter_table('producers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_producers_stripe_account_id'), ['stripe_account_id'], unique=False)

    op.create_table('avatars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('producer_id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('avatar_type', sa.String(length=50), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('avatar_ref', sa.String(length=100), nullable=False),
    sa.Column('preview_video_url', sa.String(length=500), nullable=True),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'ACTIVE', 'INACTIVE', 'PROCESSING', 'FAILED', name='avatarstatus'), nullable=False),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.Column('tags', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['producer_id'], ['producers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('avatars', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_avatars_avatar_ref'), ['avatar_ref'], unique=False)

    op.create_table('clone_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clone_id', sa.Integer(), nullable=False),
    sa.Column('producer_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('granted_by_id', sa.Integer(), nullable=False),
    sa.Column('subject_type', sa.Enum('SUBPRODUCER', 'FINAL_USER', name='permissionsubjecttype'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'PAUSED', 'EXPIRED', 'REVOKED', name='permissionstatus'), nullable=False),
    sa.Column('daily_limit', sa.Integer(), nullable=True),
    sa.Column('monthly_limit', sa.Integer(), nullable=True),
    sa.Column('per_render_cost', sa.Float(), nullable=True),
    sa.Column('daily_used', sa.Integer(), nullable=True),
    sa.Column('monthly_used', sa.Integer(), nullable=True),
    sa.Column('total_used', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['clone_id'], ['avatars.id'], ),
    sa.ForeignKeyConstraint(['granted_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['producer_id'], ['producers.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('clone_id', 'subject_id', name='unique_clone_subject_permission')
    )
    with op.batch_alter_table('clone_permissions', schema=None) as batch_op:
        batch_op.create_index('idx_clone_permissions_lookup', ['clone_id', 'subject_type', 'status'], unique=False)
        batch_op.create_index('idx_permissions_by_user', ['subject_id', 'status'], unique=False)

    op.create_table('reels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('avatar_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('script', sa.Text(), nullable=False),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('heygen_video_id', sa.String(length=100), nullable=True),
    sa.Column('heygen_job_id', sa.String(length=100), nullable=True),
    sa.Column('video_url', sa.String(length=500), nullable=True),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'PUBLISHED', name='reelstatus'), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('resolution', sa.String(length=20), nullable=True),
    sa.Column('background_type', sa.String(length=50), nullable=True),
    sa.Column('background_url', sa.String(length=500), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.Column('tags', sa.String(length=500), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('processing_started_at', sa.DateTime(), nullable=True),
    sa.Column('processing_completed_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('stripe_payment_intent_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['avatar_id'], ['avatars.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('heygen_video_id')
    )
    with op.batch_alter_table('reels', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reels_heygen_job_id'), ['heygen_job_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reels_stripe_payment_intent_id'), ['stripe_payment_intent_id'], unique=False)

    op.create_table('commissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reel_id', sa.Integer(), nullable=False),
    sa.Column('producer_id', sa.Integer(), nullable=True),
    sa.Column('commission_type', sa.String(length=50), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('percentage', sa.Float(), nullable=False),
    sa.Column('application_fee_amount', sa.Float(), nullable=True),
    sa.Column('stripe_payment_intent_id', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'PAID', 'CANCELLED', 'REFUNDED', name='commissionstatus'), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('payment_reference', sa.String(length=100), nullable=True),
    sa.Column('payment_details', sa.JSON(), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['producer_id'], ['producers.id'], ),
    sa.ForeignKeyConstraint(['reel_id'], ['reels.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('commissions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_commissions_stripe_payment_intent_id'), ['stripe_payment_intent_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('commissions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_commissions_stripe_payment_intent_id'))

    op.drop_table('commissions')
    with op.batch_alter_table('reels', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reels_stripe_payment_intent_id'))
        batch_op.drop_index(batch_op.f('ix_reels_heygen_job_id'))

    op.drop_table('reels')
    with op.batch_alter_table('clone_permissions', schema=None) as batch_op:
        batch_op.drop_index('idx_permissions_by_user')
        batch_op.drop_index('idx_clone_permissions_lookup')

    op.drop_table('clone_permissions')
    with op.batch_alter_table('avatars', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_avatars_avatar_ref'))

    op.drop_table('avatars')
    with op.batch_alter_table('producers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_producers_stripe_account_id'))

    op.drop_table('producers')
    with op.batch_alter_table('producer_requests', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_producer_requests_user_id'))
        batch_op.drop_index(batch_op.f('ix_producer_requests_status'))

    op.drop_table('producer_requests')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
